name: API Tests  # 워크플로우 이름 (GitHub UI에 표시됨)

# 언제 실행할까?
on:
  push:  # 어떤 브랜치에든 push하면
    branches: [ main, develop ]
  pull_request:  # PR 만들면
    branches: [ main ]

# 실제 작업 정의
jobs:
  test:
    runs-on: ubuntu-latest  # Ubuntu 서버에서 실행

    steps:
      # 1단계: 코드 가져오기
      - name: Checkout code
        uses: actions/checkout@v3

      # 2단계: Docker 빌드
      - name: Build Docker image
        run: docker-compose build

      # 3단계: 테스트 실행
      - name: Run tests
        run: docker-compose run test

      # 4단계: 결과 업로드 (실패 시 로그 확인)
      - name: Upload test results
        if: always()  # 성공/실패 상관없이 실행
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results/

      - name: Run tests with coverage
        run: |
          docker-compose run test pytest --cov=core --cov-report=html

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4

# TODO
#      - name: Deploy to production
#        if: github.ref == 'refs/heads/main'
#        run: |
#          # Docker Hub에 이미지 푸시
#          docker tag myapp:latest myaccount/myapp:latest
#          docker push myaccount/myapp:latest

      - name: Notify on failure
        if: failure()
        uses: 8398a7/action-slack@v4
        with:
          status: ${{ job.status }}
          text: 'Tests failed! Check logs.'




